{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuidv4","props","addContact","reset","this","onSubmit","htmlFor","className","styles","contactLabel","type","placeholder","onChange","contactInput","disabled","length","contactBtn","Component","style","display","Filter","title","input","ContactListItem","onDelete","contactLi","contactLiP","onClick","contactLiBtn","ContactList","contacts","map","key","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","trim","toast","configure","error","position","POSITION","TOP_CENTER","autoClose","delay","transition","Zoom","filterContactsByName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85d168c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLiBtn\":\"ContactListItem_contactLiBtn__3WUMP\",\"contactLi\":\"ContactListItem_contactLi__1frhh\",\"contactLiP\":\"ContactListItem_contactLiP__1OCsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__3nR-i\",\"input\":\"filter_input__11X79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLabel\":\"ContactForm_contactLabel__YnNbK\",\"contactInput\":\"ContactForm_contactInput__2ovZ0\",\"contactBtn\":\"ContactForm_contactBtn__5I3Fv\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitHandler}>\r\n        <label htmlFor=\"nameInput\" className={styles.contactLabel}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.changeHandler}\r\n            id=\"nameInput\"\r\n            className={styles.contactInput}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\" className={styles.contactLabel}>\r\n          Number:\r\n          <input\r\n            className={styles.contactInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.changeHandler}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!name.length || !number.length}\r\n          className={styles.contactBtn}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst style = {\r\n  display: \"block\",\r\n};\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label htmlFor=\"filterInput\" className={styles.title}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        style={style}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.contactLi}>\r\n      <p className={styles.contactLiP}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete} className={styles.contactLiBtn}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.length ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport { toast, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContactbyId = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      toast.configure();\n      toast.error(`${newName} is already in contact list`, {\n        position: toast.POSITION.TOP_CENTER,\n        autoClose: 8000,\n        delay: 200,\n        transition: Zoom,\n      });\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm addContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\n        <ContactList\n          contacts={this.filterContactsByName()}\n          onDelete={this.deleteContactbyId}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}